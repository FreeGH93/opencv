# https://github.com/marketplace/actions/run-on-architecture
# https://github.com/openpnp/opencv/pull/56
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
# https://github.com/openpnp/opencv/actions
# https://github.com/openpnp/opencv/pull/59/files
# https://stackoverflow.com/questions/57498605/github-actions-share-workspace-artifacts-between-jobs?rq=1
# https://github.com/actions/upload-artifact
# https://github.com/actions/download-artifact

# This action builds (or extracts) native libraries for all of the supported
# platforms and uploads them to Github releases. 

# TODO
# - only run on tags
# - extract opencv version from pom.xml for use in this action
# - upload artifacts (or can we somehow "get" them from another action?)
# - create a second action or job that pulls together all the artifacts
#   from this one and creates the final jar.
# - The final test should be running the tests with the fully built
#   jar on the various platforms. This will ensure that, for instance,
#   there is not a shared library being referenced in one env. that isn't
#   in another.

# When this is finished, the release process should be as simple as
# changing the OpenCV.java, pom.xml, README, and this file to
# update versions and then push a tag.

# The builds that will get released only need to run on one version of the OS
# and Java. Then, in a second job, they should be tested on all the versions.

name: Build OpenCV Native Libraries

on: 
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        java: [8]
        # java: [8, 9, 10, 11, 12, 13, 14, 15]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      # - name: Build OpenCV
      #   run: |
      #     wget https://github.com/opencv/opencv/archive/4.5.1.zip > /dev/null
      #     unzip 4.5.1 > /dev/null
      #     cd opencv-4.5.1
      #     mkdir build
      #     cd build
      #     cmake \
      #       -D BUILD_TESTING=OFF \
      #       -D BUILD_TESTING_SHARED=OFF \
      #       -D BUILD_TESTING_STATIC=OFF \
      #       -D OPENCV_GENERATE_PKGCONFIG=ON \
      #       -D BUILD_EXAMPLES=OFF \
      #       -D BUILD_DOCS=OFF \
      #       -D BUILD_FAT_JAVA_LIB=ON \
      #       -D BUILD_JAVA=ON \
      #       -D OPENCV_ENABLE_NONFREE=ON \
      #       -D CMAKE_BUILD_TYPE=RELEASE \
      #       -D BUILD_SHARED_LIBS=OFF ..
      #     make -j8

      # - name: Upload Binary
      #   uses: actions/upload-artifact@v2
      #   with: 
      #     name: ${{ matrix.os }}
      #     path: |
      #       opencv-4.5.1/build/bin/opencv-451.jar
      #       opencv-4.5.1/build/lib/libopencv_java451.so
      #       opencv-4.5.1/build/lib/libopencv_java451.dylib

      - name: Download Test Binaries (Temporary)
        run: |
          wget https://github.com/openpnp/opencv/releases/download/test1/opencv-4.5.1.zip
          unzip opencv-4.5.1.zip

      - name: Copy Binaries
        run: |
          cp opencv-4.5.1/build/bin/opencv-451.jar upstream || :
          cp opencv-4.5.1/build/lib/libopencv_java451.so src/main/resources/nu/pattern/opencv/linux/x86_64 || :
          cp opencv-4.5.1/build/lib/libopencv_java451.dylib src/main/resources/nu/pattern/opencv/osx/x86_64 || :

      - name: Build with Maven
        run: mvn -B test


